{"version":3,"file":"infinitescroll.js","sources":["infinitescroll.js"],"sourcesContent":["/* global maxPages */\r\n\r\n// Code snippet inspired by https://github.com/douglasrodrigues5/ghost-blog-infinite-scroll\r\nready(function () {\r\n    var currentPage = 1;\r\n    var pathname = window.location.pathname;\r\n    var $result = document.querySelectorAll('.gh-postfeed');\r\n    var buffer = 300;\r\n\r\n    var ticking = false;\r\n    var isLoading = false;\r\n\r\n    var lastScrollY = window.scrollY;\r\n    var lastWindowHeight = window.innerHeight;\r\n    var lastDocumentHeight = getDocumentHeight();\r\n\r\n    function getDocumentHeight() {\r\n        return Math.max( document.body.scrollHeight, document.body.offsetHeight, \r\n            document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight );\r\n    }\r\n\r\n    function onScroll() {\r\n        lastScrollY = window.scrollY;\r\n        requestTick();\r\n    }\r\n\r\n    function onResize() {\r\n        lastWindowHeight = window.innerHeight;\r\n        lastDocumentHeight = getDocumentHeight();\r\n        requestTick();\r\n    }\r\n\r\n    function requestTick() {\r\n        if (!ticking) {\r\n            requestAnimationFrame(infiniteScroll);\r\n        }\r\n        ticking = true;\r\n    }\r\n\r\n    function sanitizePathname(path) {\r\n        var paginationRegex = /(?:page\\/)(\\d)(?:\\/)$/i;\r\n\r\n        // remove hash params from path\r\n        path = path.replace(/#(.*)$/g, '').replace('////g', '/');\r\n\r\n        // remove pagination from the path and replace the current pages\r\n        // with the actual requested page. E. g. `/page/3/` indicates that\r\n        // the user actually requested page 3, so we should request page 4\r\n        // next, unless it's the last page already.\r\n        if (path.match(paginationRegex)) {\r\n            currentPage = parseInt(path.match(paginationRegex)[1]);\r\n\r\n            path = path.replace(paginationRegex, '');\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    function infiniteScroll() {\r\n        // sanitize the pathname from possible pagination or hash params\r\n        pathname = sanitizePathname(pathname);\r\n\r\n        // return if already loading\r\n        if (isLoading) {\r\n            return;\r\n        }\r\n\r\n        // return if not scroll to the bottom\r\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\r\n            ticking = false;\r\n            return;\r\n        }\r\n\r\n        /**\r\n        * maxPages is defined in default.hbs and is the value\r\n        * of the amount of pagination pages.\r\n        * If we reached the last page or are past it,\r\n        * we return and disable the listeners.\r\n        */\r\n        if (currentPage >= maxPages) {\r\n            window.removeEventListener('scroll', onScroll, {passive: true});\r\n            window.removeEventListener('resize', onResize);\r\n            return;\r\n        }\r\n\r\n        isLoading = true;\r\n\r\n        // next page\r\n        currentPage += 1;\r\n\r\n        // Load more\r\n        var nextPage = pathname + 'page/' + currentPage + '/';\r\n\r\n        var ajaxRequest = new XMLHttpRequest();\r\n        ajaxRequest.open('GET', nextPage, true);\r\n\r\n        ajaxRequest.onload = function() {\r\n            if (this.status >= 200 && this.status < 400) {\r\n                var parse = document.createRange().createContextualFragment(this.response);\r\n                var posts = parse.querySelectorAll('.post');\r\n                if (posts.length) {\r\n                    [].forEach.call(posts, function (post) {\r\n                        $result[0].appendChild(post);\r\n                    });\r\n                }\r\n                else if (this.status === 404) {\r\n                    window.removeEventListener('scroll', onScroll, {passive: true});\r\n                    indow.removeEventListener('resize', onResize);\r\n                }\r\n            }\r\n            lastDocumentHeight = getDocumentHeight();\r\n            isLoading = false;\r\n            ticking = false;\r\n        };\r\n\r\n        ajaxRequest.onerror = function() {};\r\n\r\n        ajaxRequest.send();\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll, {passive: true});\r\n    window.addEventListener('resize', onResize);\r\n\r\n    infiniteScroll();\r\n});\r\n"],"names":["ready","currentPage","pathname","window","location","$result","document","querySelectorAll","buffer","ticking","isLoading","lastScrollY","scrollY","lastWindowHeight","innerHeight","lastDocumentHeight","getDocumentHeight","Math","max","body","scrollHeight","offsetHeight","documentElement","clientHeight","onScroll","requestTick","onResize","requestAnimationFrame","infiniteScroll","path","paginationRegex","replace","match","parseInt","maxPages","removeEventListener","passive","nextPage","ajaxRequest","XMLHttpRequest","open","onload","posts","this","status","createRange","createContextualFragment","response","length","forEach","call","post","appendChild","indow","onerror","send","addEventListener"],"mappings":"AAGAA,MAAM,WACF,IAAIC,EAAc,EACdC,EAAWC,OAAOC,SAASF,SAC3BG,EAAUC,SAASC,iBAAiB,gBACpCC,EAAS,IAETC,GAAU,EACVC,GAAY,EAEZC,EAAcR,OAAOS,QACrBC,EAAmBV,OAAOW,YAC1BC,EAAqBC,IAEzB,SAASA,IACL,OAAOC,KAAKC,IAAKZ,SAASa,KAAKC,aAAcd,SAASa,KAAKE,aACvDf,SAASgB,gBAAgBC,aAAcjB,SAASgB,gBAAgBF,aAAcd,SAASgB,gBAAgBD,cAG/G,SAASG,IACLb,EAAcR,OAAOS,QACrBa,IAGJ,SAASC,IACLb,EAAmBV,OAAOW,YAC1BC,EAAqBC,IACrBS,IAGJ,SAASA,IACAhB,GACDkB,sBAAsBC,GAE1BnB,GAAU,EAsBd,SAASmB,IAnBT,IAA0BC,EAClBC,EAuBJ,GAvBIA,EAAkB,0BAGtBD,GAJsBA,EAqBM3B,GAjBhB6B,QAAQ,UAAW,IAAIA,QAAQ,QAAS,MAM3CC,MAAMF,KACX7B,EAAcgC,SAASJ,EAAKG,MAAMF,GAAiB,IAEnDD,EAAOA,EAAKE,QAAQD,EAAiB,KAQzC5B,EALO2B,GAQHnB,EAKJ,GAAIC,EAAcE,GAAoBE,EAAqBP,EACvDC,GAAU,MADd,CAWA,GAAIR,GAAeiC,SAGf,OAFA/B,OAAOgC,oBAAoB,SAAUX,EAAU,CAACY,SAAS,SACzDjC,OAAOgC,oBAAoB,SAAUT,GAIzChB,GAAY,EAMZ,IAAI2B,EAAWnC,EAAW,SAH1BD,GAAe,GAGmC,IAE9CqC,EAAc,IAAIC,eACtBD,EAAYE,KAAK,MAAOH,GAAU,GAElCC,EAAYG,OAAS,WACjB,IAEQC,EAFW,KAAfC,KAAKC,QAAiBD,KAAKC,OAAS,OAEhCF,EADQpC,SAASuC,cAAcC,yBAAyBH,KAAKI,UAC/CxC,iBAAiB,UACzByC,OACN,GAAGC,QAAQC,KAAKR,EAAO,SAAUS,GAC7B9C,EAAQ,GAAG+C,YAAYD,KAGN,MAAhBR,KAAKC,SACVzC,OAAOgC,oBAAoB,SAAUX,EAAU,CAACY,SAAS,IACzDiB,MAAMlB,oBAAoB,SAAUT,KAG5CX,EAAqBC,IAErBP,EADAC,GAAY,GAIhB4B,EAAYgB,QAAU,aAEtBhB,EAAYiB,QAGhBpD,OAAOqD,iBAAiB,SAAUhC,EAAU,CAACY,SAAS,IACtDjC,OAAOqD,iBAAiB,SAAU9B,GAElCE"}